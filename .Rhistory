a <- available.packages()
head(rownames(a),3)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
find.package(devtools)
find.package("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
install.packages("KernSmooth")
library(KernSmooth)
?lapply
?runif
runif(1:2)
runif(1)
runif(1:3)
?quantile
rm(list = ls())
swirl
source(swirl)
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply
csl_vect <- sapply(flags,class)
cls_vect <- sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range
)
sapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags,unique)
unique_val
unique_vals
sapply(unique_vals, length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
rm(list = ;s())
rm(list = ls())
library(datasets)
data(iris)
dim(iris)
head(iris)
tapply(iris[,'Sepal.Length'],iris[,'Species'],mean)
sapply(iris[, c('Sepal.Length', 'Sepal.Width', 'Petal.Length','Petal.Width')],mean)
apply(iris[, 1:4], 1, mean)
apply(iris[, 1:4], 2, mean)
data(mtcars)
head(mtcars)
tapply(mtcars$mpg, mtcars$cyl, mean)
split(mtcars$mpg, mtcars$cyl)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
with(mtcars, tapply(mpg, cyl, mean))
sapply(mtcars, cyl, mean)
x <- with(mtcars,tapply(hp,cyl,mean))
x
with(x,abs(8-4))
abs(x$8-x$4)
x&8
names(x)
abs(x$"8"-x$"4")
x[names(x) = "8"]
x[names(x) == "8"]
abs(x[names(x) == "8"] - x[names(x) == "4"] )
debug(ls)
ls
exit
q
quit
Q
l
source("cachevector.R")
setwd("C:/Users/MiAir/ProgrammingAssignment2")
source("cachevector.R")
undebug(ls)
undebug(ls)
